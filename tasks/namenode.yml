---
- name: Configure mapred-site.xml
  template: src=mapred-site.xml.j2 dest="{{hdfs_conf_dir}}/mapred-site.xml" owner={{hdfs_user}} group={{hdfs_group}}

- name: Configure slaves
  template: src=slaves.j2 dest="{{hdfs_conf_dir}}//slaves" owner={{hdfs_user}} group={{hdfs_group}} mode=0744

- name: Create namenode directories
  file: path={{item}} state=directory owner={{hdfs_user}} group={{hdfs_group}} mode=0700
  with_items: "{{ hdfs_namenode_dir_list }}"

- name: Create exclude file
  template: src=dfs.hosts.exclude.j2 dest={{hdfs_conf_dir}}/dfs.hosts.exclude owner={{hdfs_user}} group={{hdfs_group}} mode=0700
  notify: Restart namenode

- name: Set program variable to 'namenode'
  set_fact: program="namenode"

- name: Deploy init.d service for namenode
  template: src=hdfs-service.j2 dest=/etc/init.d/hdfs-namenode owner=root group=root mode=0755
  when: ansible_service_mgr != "systemd"

- name: Deploy systemd service for namenode
  template: src=hdfs.service.j2 dest=/lib/systemd/system/hdfs-namenode.service owner=root group=root mode=0644
  register: namenode_systemd_unit_altered
  when: ansible_service_mgr == "systemd"

- name: Set program variable to 'zkfc'
  set_fact: program="zkfc"
  when: hdfs_ha_enabled

- name: Deploy init.d service for zkfc
  template: src=hdfs-service.j2 dest=/etc/init.d/hdfs-zkfc owner=root group=root mode=0755
  register: zkfc_systemd_unit_altered
  when: hdfs_ha_enabled and ansible_service_mgr != "systemd"

- name: Deploy systemd service for zkfc
  template: src=hdfs.service.j2 dest=/lib/systemd/system/hdfs-zkfc.service owner=root group=root mode=0644
  when: hdfs_ha_enabled and ansible_service_mgr == "systemd"

- name: Set program variable to 'resourcemanager'
  set_fact: program="resourcemanager"

- name: Deploy init.d service for yarn resourcemanager
  template: src=yarn-service.j2 dest=/etc/init.d/yarn-resourcemanager owner=root group=root mode=0755
  register: yarn_systemd_unit_altered
  when: hdfs_ha_enabled and ansible_service_mgr != "systemd" and inventory_hostname == hdfs_namenodes[0]

- name: Deploy systemd service for yarn resourcemanager
  template: src=yarn.service.j2 dest=/lib/systemd/system/yarn-resourcemanager.service owner=root group=root mode=0644
  when: hdfs_ha_enabled and ansible_service_mgr == "systemd" and inventory_hostname == hdfs_namenodes[0]
  notify: Restart yarn-resourcemanager

- name: Set program variable to 'nodemanager'
  set_fact: program="nodemanager"

- name: Deploy init.d service for yarn nodemanager
  template: src=yarn-service.j2 dest=/etc/init.d/yarn-nodemanager owner=root group=root mode=0755
  register: yarn_systemd_unit_altered
  when: hdfs_ha_enabled and ansible_service_mgr != "systemd" and inventory_hostname == hdfs_namenodes[0]

- name: Deploy systemd service for yarn nodemanager
  template: src=yarn.service.j2 dest=/lib/systemd/system/yarn-nodemanager.service owner=root group=root mode=0644
  when: hdfs_ha_enabled and ansible_service_mgr == "systemd" and inventory_hostname == hdfs_namenodes[0]
  notify: Restart yarn-nodemanager

# daemon-reload cannot be sent to handler because it is needed before the end of play
# also, we cannot use flush_handlers before the end of play, because we have other handlers
- name: Reload systemd daemon
  command: "systemctl daemon-reload"
  when: ansible_service_mgr == "systemd" and ( namenode_systemd_unit_altered.changed or zkfc_systemd_unit_altered.changed )
  tags:
    - skip_ansible_lint

- name: Register namenode service
  service: name=hdfs-namenode enabled=yes

- name: Register zkfc service
  service: name=hdfs-zkfc enabled=yes
  when: hdfs_ha_enabled

- name: Register yarn-nodemanager service
  service: name=yarn-nodemanager enabled=yes
  when: hdfs_ha_enabled and inventory_hostname == hdfs_namenodes[0]

- name: Register yarn-resourcemanager service
  service: name=yarn-resourcemanager enabled=yes
  when: hdfs_ha_enabled and inventory_hostname == hdfs_namenodes[0]